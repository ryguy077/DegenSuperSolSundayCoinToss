import React, { useMemo, useCallback } from "react";
import { OnboardingRequestStatusResponse, useCrossMintStatus } from "./useCrossMintStatus";
export const CrossMintStatusButton = ({ className, disabled, onClick, style, tabIndex, theme = "dark", ...props }) => {
    const { status, clientId, auctionId } = useCrossMintStatus();
    const handleClick = useCallback((event) => {
        if (onClick)
            onClick(event);
        if (status === OnboardingRequestStatusResponse.WAITING_SUBMISSION) {
            window.open(`https://crossmint.io/developers/onboarding${clientId ? `?clientId=${clientId}` : ""}${auctionId ? `&auctionId=${auctionId}` : ""}`, "_blank");
            return;
        }
    }, [status]);
    const content = useMemo(() => {
        switch (status) {
            case OnboardingRequestStatusResponse.INVALID:
                return React.createElement("p", null, "Invalid clientId");
            case OnboardingRequestStatusResponse.WAITING_SUBMISSION:
                return React.createElement("p", null, "Click here to setup CrossMint");
            case OnboardingRequestStatusResponse.PENDING:
                return React.createElement("p", null, "Your application is under review");
            case OnboardingRequestStatusResponse.ACCEPTED:
                return React.createElement("p", null, "You're good to go!");
            case OnboardingRequestStatusResponse.REJECTED:
                return React.createElement("p", null, "You're application was rejected");
        }
    }, [status]);
    return (React.createElement("button", { className: `client-sdk-button-trigger client-sdk-button-trigger-${theme}`, disabled: status !== OnboardingRequestStatusResponse.WAITING_SUBMISSION, onClick: handleClick, style: { ...style }, tabIndex: tabIndex, ...props },
        React.createElement("img", { className: "client-sdk-button-icon", src: "https://www.crossmint.io/assets/crossmint/logo.png", alt: "Crossmint logo" }),
        content));
};
//# sourceMappingURL=CrossMintStatusButton.js.map