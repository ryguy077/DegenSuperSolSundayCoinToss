"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CrossMintModal = void 0;
const react_1 = __importStar(require("react"));
const react_dom_1 = require("react-dom");
const useCrossMintModal_1 = require("./useCrossMintModal");
const CrossMintModal = ({ className = "", container = "body" }) => {
    const ref = (0, react_1.useRef)(null);
    const { setVisible } = (0, useCrossMintModal_1.useCrossMintModal)();
    const [fadeIn, setFadeIn] = (0, react_1.useState)(false);
    const [portal, setPortal] = (0, react_1.useState)(null);
    const hideModal = (0, react_1.useCallback)(() => {
        setFadeIn(false);
        setTimeout(() => setVisible(false), 150);
    }, [setFadeIn, setVisible]);
    (0, react_1.useLayoutEffect)(() => {
        // Get original overflow
        const { overflow } = window.getComputedStyle(document.body);
        // Hack to enable fade in animation after mount
        setTimeout(() => setFadeIn(true), 0);
        // Prevent scrolling on mount
        document.body.style.overflow = "hidden";
        return () => {
            // Re-enable scrolling when component unmounts
            document.body.style.overflow = overflow;
        };
    }, [hideModal]);
    (0, react_1.useLayoutEffect)(() => setPortal(document.querySelector(container)), [setPortal, container]);
    return (portal &&
        (0, react_dom_1.createPortal)(react_1.default.createElement("div", { "aria-modal": "true", className: `client-sdk-modal ${fadeIn ? "client-sdk-modal-fade-in" : ""} ${className}`, ref: ref },
            react_1.default.createElement("div", { className: "client-sdk-modal-container" },
                react_1.default.createElement("span", { className: "client-sdk-modal-loader" })),
            react_1.default.createElement("div", { className: "client-sdk-modal-overlay" })), portal));
};
exports.CrossMintModal = CrossMintModal;
//# sourceMappingURL=CrossMintModal.js.map