"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CrossMintStatusProvider = void 0;
const react_1 = __importStar(require("react"));
const useCrossMintStatus_1 = require("./useCrossMintStatus");
const CrossMintStatusProvider = ({ clientId, auctionId, hideMintOnInactiveClient, children, }) => {
    const [status, setStatus] = (0, react_1.useState)(useCrossMintStatus_1.OnboardingRequestStatusResponse.WAITING_SUBMISSION);
    function fetchClientIntegration() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!clientId || clientId === "" || clientId === "<YOUR_CLIENT_ID>") {
                console.warn("You must enter your own CrossMint client ID in <CrossMintProvider clientId=XXX>");
                return;
            }
            const res = yield fetch(`https://www.crossmint.io/api/crossmint/onboardingRequests/${clientId}/status`);
            if (res.status === 200) {
                const resData = yield res.json();
                console.log("resData", resData);
                setStatus(resData.status);
            }
            else {
                if (status !== useCrossMintStatus_1.OnboardingRequestStatusResponse.INVALID) {
                    setStatus(useCrossMintStatus_1.OnboardingRequestStatusResponse.INVALID);
                }
            }
        });
    }
    (0, react_1.useEffect)(() => {
        fetchClientIntegration();
        const interval = setInterval(() => {
            fetchClientIntegration();
        }, 60 * 1000);
        return () => clearInterval(interval);
    }, []);
    return (react_1.default.createElement(useCrossMintStatus_1.CrossMintStatusContext.Provider, { value: {
            status,
            clientId,
            auctionId,
            hideMintOnInactiveClient,
        } }, children));
};
exports.CrossMintStatusProvider = CrossMintStatusProvider;
//# sourceMappingURL=CrossMintStatusProvider.js.map